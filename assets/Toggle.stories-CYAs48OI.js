import{bt as d,j as r}from"./index-0nDB5Zzz.js";import{r as p}from"./index-CBqU2yxZ.js";import{O as c}from"./Output-Sfj1QWTd.js";import{M as g,A as e}from"./constants-D7cOJi0A.js";import{g as f}from"./generateStoryDecorator-jcZX8bPx.js";import"./_baseClone-CBkhujLI.js";import{u as O}from"./useFieldControl-oDxVSMc2.js";import"./isPlainObject-Dl0da9pc.js";import"./_commonjsHelpers-BosuxZz1.js";import"./mapValues-CZXAhdHD.js";import"./index-Ch9hqOxJ.js";import"./toNumber-BGTiNFDU.js";import"./StoryBox-BZYZ6up0.js";import"./fr_FR-CrxT__co.js";const B={...g,title:"Fields/Toggle",component:d,argTypes:{checked:e.OPTIONAL_BOOLEAN,disabled:e.OPTIONAL_BOOLEAN,error:e.OPTIONAL_STRING,isErrorMessageHidden:e.OPTIONAL_BOOLEAN,isLabelHidden:e.OPTIONAL_BOOLEAN,isLight:e.OPTIONAL_BOOLEAN,isTransparent:e.OPTIONAL_BOOLEAN,isUndefinedWhenDisabled:e.OPTIONAL_BOOLEAN,readOnly:e.OPTIONAL_BOOLEAN},args:{checked:!1,disabled:!1,error:"",isErrorMessageHidden:!1,isLabelHidden:!1,isLight:!1,isTransparent:!1,isUndefinedWhenDisabled:!1,label:"A toggle",name:"myToggle",readOnly:!1},decorators:[f({box:{width:640},withBackgroundButton:!0,withPseudoStateButtons:{targetSelector:".rs-toggle-presentation"}})]};function n(o){const[a,l]=p.useState("∅"),{controlledOnChange:u,controlledValue:m}=O(o.checked,l);return r.jsxs(r.Fragment,{children:[r.jsx(d,{...o,checked:!!m,error:o.error,onChange:u}),a!=="∅"&&r.jsx(c,{value:a})]})}n.__docgenInfo={description:"",methods:[],displayName:"_Toggle",props:{checked:{required:!1,tsType:{name:"union",raw:"boolean | undefined",elements:[{name:"boolean"},{name:"undefined"}]},description:""},dataCy:{required:!1,tsType:{name:"string"},description:""},error:{required:!1,tsType:{name:"union",raw:"string | undefined",elements:[{name:"string"},{name:"undefined"}]},description:""},isErrorMessageHidden:{required:!1,tsType:{name:"union",raw:"boolean | undefined",elements:[{name:"boolean"},{name:"undefined"}]},description:""},isLabelHidden:{required:!1,tsType:{name:"union",raw:"boolean | undefined",elements:[{name:"boolean"},{name:"undefined"}]},description:""},isLight:{required:!1,tsType:{name:"union",raw:"boolean | undefined",elements:[{name:"boolean"},{name:"undefined"}]},description:""},isTransparent:{required:!1,tsType:{name:"union",raw:"boolean | undefined",elements:[{name:"boolean"},{name:"undefined"}]},description:""},isUndefinedWhenDisabled:{required:!1,tsType:{name:"union",raw:"boolean | undefined",elements:[{name:"boolean"},{name:"undefined"}]},description:""},label:{required:!0,tsType:{name:"string"},description:""},name:{required:!0,tsType:{name:"string"},description:""},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(isChecked: boolean | undefined) => void",signature:{arguments:[{type:{name:"union",raw:"boolean | undefined",elements:[{name:"boolean"},{name:"undefined"}]},name:"isChecked"}],return:{name:"void"}}},description:""}}};var t,s,i;n.parameters={...n.parameters,docs:{...(t=n.parameters)==null?void 0:t.docs,source:{originalSource:`function _Toggle(props: ToggleProps) {
  const [outputValue, setOutputValue] = useState<boolean | undefined | '∅'>('∅');
  const {
    controlledOnChange,
    controlledValue: controlledChecked
  } = useFieldControl(props.checked, setOutputValue);
  return <>
      <Toggle {...props} checked={!!controlledChecked} error={props.error} onChange={controlledOnChange} />

      {outputValue !== '∅' && <Output value={outputValue} />}
    </>;
}`,...(i=(s=n.parameters)==null?void 0:s.docs)==null?void 0:i.source}}};const I=["_Toggle"];export{n as _Toggle,I as __namedExportsOrder,B as default};
