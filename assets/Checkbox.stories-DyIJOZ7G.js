import{aZ as d,j as r}from"./index-D3QtTYcx.js";import{r as c}from"./index-CBqU2yxZ.js";import{O as p}from"./Output-CQAZDSvb.js";import{M as f,A as e}from"./constants-VGTGrGmu.js";import{g as O}from"./generateStoryDecorator-DsoMrMh3.js";import"./_baseClone-CBkhujLI.js";import{u as h}from"./useFieldControl-hP0ART6Y.js";import"./isPlainObject-Dl0da9pc.js";import"./_commonjsHelpers-BosuxZz1.js";import"./mapValues-CZXAhdHD.js";import"./index-Ch9hqOxJ.js";import"./toNumber-BGTiNFDU.js";import"./StoryBox-DeLdszCZ.js";import"./fr_FR-BAq5VERt.js";const q={...f,title:"Fields/Checkbox",component:d,argTypes:{checked:e.OPTIONAL_BOOLEAN,className:e.NO_CONTROL,disabled:e.OPTIONAL_BOOLEAN,error:e.OPTIONAL_STRING,hasError:e.NO_CONTROL,isErrorMessageHidden:e.OPTIONAL_BOOLEAN,isLight:e.OPTIONAL_BOOLEAN,isTransparent:e.OPTIONAL_BOOLEAN,isUndefinedWhenDisabled:e.OPTIONAL_BOOLEAN,readOnly:e.OPTIONAL_BOOLEAN,style:e.NO_CONTROL},args:{checked:!1,disabled:!1,error:"",isErrorMessageHidden:!1,isLight:!1,isTransparent:!1,isUndefinedWhenDisabled:!1,label:"A checkbox. Check me!",name:"myCheckbox",readOnly:!1},decorators:[O({box:{width:640},withBackgroundButton:!0,withPseudoStateButtons:{targetSelector:".rs-checkbox-checker"}})]};function n(o){const[a,l]=c.useState("∅"),{controlledOnChange:u,controlledValue:m}=h(o.checked,l);return r.jsxs(r.Fragment,{children:[r.jsx(d,{...o,checked:m,onChange:u}),a!=="∅"&&r.jsx(p,{value:a})]})}n.__docgenInfo={description:"",methods:[],displayName:"_Checkbox",props:{checked:{required:!1,tsType:{name:"union",raw:"boolean | undefined",elements:[{name:"boolean"},{name:"undefined"}]},description:""},className:{required:!1,tsType:{name:"union",raw:"string | undefined",elements:[{name:"string"},{name:"undefined"}]},description:""},disabled:{required:!1,tsType:{name:"union",raw:"boolean | undefined",elements:[{name:"boolean"},{name:"undefined"}]},description:""},error:{required:!1,tsType:{name:"union",raw:"string | undefined",elements:[{name:"string"},{name:"undefined"}]},description:""},hasError:{required:!1,tsType:{name:"union",raw:"boolean | undefined",elements:[{name:"boolean"},{name:"undefined"}]},description:`Used internally to pass the error state from other monitor-ui components using this checkbox.

@description
⚠️ Don't use this prop directly. Use \`error\` instead.

@internal`},isErrorMessageHidden:{required:!1,tsType:{name:"union",raw:"boolean | undefined",elements:[{name:"boolean"},{name:"undefined"}]},description:""},isLight:{required:!1,tsType:{name:"union",raw:"boolean | undefined",elements:[{name:"boolean"},{name:"undefined"}]},description:""},isTransparent:{required:!1,tsType:{name:"union",raw:"boolean | undefined",elements:[{name:"boolean"},{name:"undefined"}]},description:""},isUndefinedWhenDisabled:{required:!1,tsType:{name:"union",raw:"boolean | undefined",elements:[{name:"boolean"},{name:"undefined"}]},description:""},label:{required:!0,tsType:{name:"string"},description:""},name:{required:!0,tsType:{name:"string"},description:""},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(isChecked: boolean | undefined) => Promisable<void>",signature:{arguments:[{type:{name:"union",raw:"boolean | undefined",elements:[{name:"boolean"},{name:"undefined"}]},name:"isChecked"}],return:{name:"Promisable",elements:[{name:"void"}],raw:"Promisable<void>"}}},description:""},readOnly:{required:!1,tsType:{name:"union",raw:"boolean | undefined",elements:[{name:"boolean"},{name:"undefined"}]},description:""},style:{required:!1,tsType:{name:"union",raw:"CSSProperties | undefined",elements:[{name:"CSSProperties"},{name:"undefined"}]},description:""}}};var s,t,i;n.parameters={...n.parameters,docs:{...(s=n.parameters)==null?void 0:s.docs,source:{originalSource:`function _Checkbox(props: CheckboxProps) {
  const [outputValue, setOutputValue] = useState<boolean | undefined | '∅'>('∅');
  const {
    controlledOnChange,
    controlledValue: controlledChecked
  } = useFieldControl(props.checked, setOutputValue);
  return <>
      <Checkbox {...props} checked={controlledChecked} onChange={controlledOnChange} />

      {outputValue !== '∅' && <Output value={outputValue} />}
    </>;
}`,...(i=(t=n.parameters)==null?void 0:t.docs)==null?void 0:i.source}}};const S=["_Checkbox"];export{n as _Checkbox,S as __namedExportsOrder,q as default};
